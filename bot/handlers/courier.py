import asyncio
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

# –ò–º–ø–æ—Ä—Ç –Ω–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ Database (—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω)
from repo.database import db

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫—É—Ä—å–µ—Ä–∞ ---
COURIER_REGISTRATION_FULL_NAME, COURIER_REGISTRATION_IIN, COURIER_REGISTRATION_PHONE, COURIER_REGISTRATION_ADDRESS, COURIER_REGISTRATION_EMAIL = range(5)

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ---
SUPPORT_QUESTION = 0

# ======== –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ========

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞
async def start_courier(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç, –∫—É—Ä—å–µ—Ä!\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /register_courier –∏–ª–∏, –µ—Å–ª–∏ –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, "
        "–ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /my_profile."
    )

# ======== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫—É—Ä—å–µ—Ä–∞ ========

async def register_courier_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –∫—É—Ä—å–µ—Ä —É–∂–µ
    courier = await db.get_courier(telegram_id)
    if courier:
        await update.message.reply_text("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        return ConversationHandler.END

    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:")
    return COURIER_REGISTRATION_FULL_NAME

async def get_courier_full_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['full_name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ò–ò–ù:")
    return COURIER_REGISTRATION_IIN

async def get_courier_iin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['IIN'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return COURIER_REGISTRATION_PHONE

async def get_courier_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['phone_number'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å:")
    return COURIER_REGISTRATION_ADDRESS

async def get_courier_address(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['address'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:")
    return COURIER_REGISTRATION_EMAIL

async def get_courier_email(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['email'] = update.message.text
    telegram_id = update.effective_user.id

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫—É—Ä—å–µ—Ä —É—Å–ø–µ–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ
    courier = await db.get_courier(telegram_id)
    if courier:
        await update.message.reply_text("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        return ConversationHandler.END

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫—É—Ä—å–µ—Ä–∞ –≤ –±–∞–∑–µ
    await db.create_couriers(
        context.user_data['full_name'],
        context.user_data['IIN'],
        context.user_data['phone_number'],
        context.user_data['address'],
        context.user_data['email'],
        telegram_id
    )
    await update.message.reply_text("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞–∫–∞–∑—ã.")
    return ConversationHandler.END

async def cancel_registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

# ======== –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è –∫—É—Ä—å–µ—Ä–∞ ========
async def view_courier_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    courier = await db.get_courier(telegram_id)
    if courier:
        profile_text = (
            f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –∫—É—Ä—å–µ—Ä–∞:\n"
            f"–ò–º—è: {courier['full_name']}\n"
            f"–ò–ò–ù: {courier['iin']}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {courier['phone_number']}\n"
            f"–ê–¥—Ä–µ—Å: {courier['address']}\n"
            f"Email: {courier['email']}"
        )
        await update.message.reply_text(profile_text)
    else:
        await update.message.reply_text("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /register_courier.")

# ======== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ ========
# –§—É–Ω–∫—Ü–∏—è-—Å–∏–º—É–ª—è—Ü–∏—è: –∫—É—Ä—å–µ—Ä –ø–æ–ª—É—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
async def order_notification(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å—Å—è –∏–∑ –ë–î –∏–ª–∏ –≤–Ω–µ—à–Ω–µ–π —Å–∏—Å—Ç–µ–º—ã
    order_id = 123  # –ü—Ä–∏–º–µ—Ä –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–∫–∞–∑–∞
    order_details = (
        f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω!\n"
        f"–ó–∞–∫–∞–∑ ‚Ññ{order_id}\n"
        f"–ö–ª–∏–µ–Ω—Ç: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n"
        f"–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10\n"
        f"QR-–∫–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞: 123e4567-e89b-12d3-a456-426614174000\n\n"
        "–ü–æ—Å–ª–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∫–æ–º–∞–Ω–¥–æ–π /confirm_delivery."
    )
    await update.message.reply_text(order_details)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏
async def confirm_delivery(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ó–¥–µ—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –ë–î
    await update.message.reply_text("‚úÖ –ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ 'delivered'.")

# ======== –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ (–ò–ò‚Äë—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞) ========
async def support_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏:")
    return SUPPORT_QUESTION

async def support_receive(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_query = update.message.text
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ò–ò‚Äë—Å–∏—Å—Ç–µ–º–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–∞
    # –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —à–∞–±–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    ai_response = (
        "–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏. "
        "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )
    await update.message.reply_text(ai_response)
    return ConversationHandler.END

async def cancel_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    return ConversationHandler.END

# ======== –°–æ–∑–¥–∞–Ω–∏–µ conversation handlers –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ========
def get_courier_conv_handler():
    registration_conv = ConversationHandler(
        entry_points=[CommandHandler('register_courier', register_courier_entry)],
        states={
            COURIER_REGISTRATION_FULL_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_courier_full_name)],
            COURIER_REGISTRATION_IIN: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_courier_iin)],
            COURIER_REGISTRATION_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_courier_phone)],
            COURIER_REGISTRATION_ADDRESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_courier_address)],
            COURIER_REGISTRATION_EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_courier_email)],
        },
        fallbacks=[CommandHandler('cancel', cancel_registration)]
    )

    support_conv = ConversationHandler(
        entry_points=[CommandHandler('support', support_start)],
        states={
            SUPPORT_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, support_receive)],
        },
        fallbacks=[CommandHandler('cancel', cancel_support)]
    )

    return registration_conv, support_conv

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö handlers, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫—É—Ä—å–µ—Ä–æ–º
def get_courier_handlers():
    registration_conv, support_conv = get_courier_conv_handler()
    return [
        CommandHandler('start_courier', start_courier),
        registration_conv,
        CommandHandler('my_profile', view_courier_profile),
        CommandHandler('order', order_notification),
        CommandHandler('confirm_delivery', confirm_delivery),
        support_conv,
    ]